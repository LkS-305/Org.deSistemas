title Manipulação de Vetor (Entrada, armazenamento, impressão, comparação e cópia de vetor)
;O PROGRAMA RECEBE UM STRING DE LETRAS E O ARMAZENA NA MEMÓRIA, ALÉM DE COMPARÁ-LO COM UM STRING JÁ EXISTENTE NA MEMÓRIA
;OBS: O PROGRAMA VAI PARA O CARALHO SE O USUÁRIO APERTA BACKSPACE ANTES DE ESCREVER UMA LETRA
.MODEL SMALL
.STACK 100H
PUSH_4 MACRO R1, R2, R3, R4
    PUSH R1
    PUSH R2
    PUSH R3
    PUSH R4
ENDM

POP_4 MACRO R1, R2, R3, R4
    POP R4
    POP R3
    POP R2
    POP R1
ENDM

PULAR_LINHA MACRO
    PUSH AX
    PUSH DX

    MOV AH, 2
    MOV DL, 10
    INT 21H
    MOV DL, 13
    INT 21H
    
    POP DX
    POP AX
ENDM
.DATA
    TAMANHO_VETOR DW 0                                  ;NÚMERO DE CARACTERES DENTRO DO VETOR (É DW PARA NÃO TER QUE ME PREOCUPAR EM DAR O MOV APENAS PARA CL E DEPOIS ZERAR CH)
    MSG_DIGITE DB 10, 13, "Digite: $"
    MSG_IMPRIMIR DB 10, 13, "O digitado foi: $"
    MSG_STRINGS_IGUAIS DB 10, 13, "Os dois strings sao iguais$"
    MSG_STRINGS_DIFERENTES DB 10, 13, "Os dois strings sao diferentes$"
    MSG_SEARCH DB 10, 13, "Digite uma letra para procurar quantas vezes aparece no string: $"
    MSG_SEARCH_COMPLETE DB 10, 13, "Numero de vezes que o caractere aparece: $"
    VETOR DB 100 DUP(0)
    COPIA DB 100 DUP(0)
    COMPARACAO DB "Lucas Kitsuta Sabino"

.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    MOV ES, AX

    CALL LER_ARMAZENAR_STRING

    CALL COPIAR_STRING

    CALL COMPARAR_STRING

    CALL IMPRIMIR_STRING

    CALL SEARCH_CARACTERE

    MOV AH, 4CH
    INT 21H
MAIN ENDP

;LE UM STRING DE ATÉ 100 CARACTERES E O ARMAZENA NA MEMÓRIA, NA POSIÇÃO MARCADA PELO LABEL 'VETOR'
;IMPRIME UMA MENSAGEM 'MSG_DIGITE ANTES DE RECEBER O STRING'
;GUARDA O NÚMERO DE CARACTERES DIGITADOS EM UMA VARIÁVEL 'TAMANHO_VETOR'
LER_ARMAZENAR_STRING PROC
    PUSH_4 AX, DI, CX, DX
    CLD
    MOV AH, 9
    LEA DX, MSG_DIGITE                      ;MENSAGEM PEDINDO ENTRADA DO USUÁRIO
    INT 21H

    XOR DX, DX
    MOV CX, 100
    LEA DI, VETOR                           ;ENDEREÇO DE OFFSET DO VETOR
    MOV AH, 1
    INPUT_STRING:
        INT 21H

        CMP AL, 13                          ;PRESSIONE ENTER PARA FINALIZAR A ENTRADA DO STRING
        JZ FIM_INPUT

        CMP AL, 8H                          ;SE BACKSPACE, NÃO PULAR
        JNZ CONTINUAR
        
        DEC DI                              ;BACKSPACE NO STRING
        XOR AL, AL
        STOSB                               ;SUBSTITUI ULTIMO CARACTERE DIGITADO POR UM 0
        DEC DL
        DEC DI                              ;VOLTA 1 CASA PARA PEDIR A ENTRADA NOVAMENTE
        JMP INPUT_STRING

        CONTINUAR:
        STOSB                               ;GUARDA CARACTERE DIGITADO NA POSIÇÃO APONTADA POR DI, AVANÇA DI PPARA A PRÓXIMA POSIÇÃO
        INC DX                              ;NÚMERO DE CARACTERES DIGITADOS
        LOOP INPUT_STRING
    FIM_INPUT:
    MOV TAMANHO_VETOR, DX                   ;GUARDA NA MEMÓRIA QUANTOS CARACTERES O USUÁRIO DIGITOU
    POP_4 AX, DI, CX, DX
    RET
LER_ARMAZENAR_STRING ENDP

;IMPRIME UM STRING DE NOME _____
;NÚMERO DE CARACTERES NO VETOR DEVE ESTAR NA VARIÁVEL 'TAMANHO_VETOR'
IMPRIMIR_STRING PROC
    PUSH_4 AX, SI, CX, DX
    CLD
    LEA SI, VETOR                           ;ENDEREÇO DE OFFSET DO VETOR QUE CONTÉM O STRING
    MOV AH, 9
    LEA DX, MSG_IMPRIMIR                    ;IMPRIME MENSAGEM DE AVISO
    INT 21H

    MOV CX, TAMANHO_VETOR                   ;LOOP IRÁ RODAR DE ACORDO COM O CONTADOR DE CARACTERES NO VETOR
    CMP CX, 0
    JZ IMPRIMIR_VAZIO
    MOV AH, 2
    OUTPUT_STRING:
        LODSB                               ;CARREGA O ELEMENTO QUE ESTÁ EM [SI] E O COLOCA EM AL
        MOV DL, AL                          ;PREPARA PARA IMPRIMIR O CARACTERE CARREGADO
        INT 21H
        LOOP OUTPUT_STRING
    IMPRIMIR_VAZIO:
    POP_4 AX, SI, CX, DX
    RET
IMPRIMIR_STRING ENDP

;COPIA UM VETOR PARA OUTRO
;NÚMERO DE CARACTERES NO VETOR DE ORIGEM DEVE ESTAR NA VARIÁVEL 'TAMANHO_VETOR'
COPIAR_STRING PROC
    PUSH_4 AX, SI, CX, DI
    LEA SI, VETOR
    LEA DI, COPIA
    CLD
    MOV CX, TAMANHO_VETOR
    CMP CX, 0
    JZ COPIA_VAZIO                              ;SE O VETOR ESTIVER VAZIO, VAI AO FIM DO PROCEDIMENTO
    COPY_STRING:
        MOVSB
        LOOP COPY_STRING
    COPIA_VAZIO:
    POP_4 AX, SI, CX, DI
    RET
COPIAR_STRING ENDP

;COMPARA DOIS VETORES E DIZ SE SÃO IGUAIS OU NÃO
;NÚMERO DE CARACTERES A SEREM COMPARADOS DEVE ESTAR NA VARIÁVEL 'TAMANHO_VETOR'
COMPARAR_STRING PROC
    PUSH DX
    PUSH_4 AX, SI, CX, DI
    LEA SI, VETOR
    LEA DI, COMPARACAO
    CLD

    MOV AH, 9
    MOV CX, TAMANHO_VETOR
    CMP CX, 0
    JZ COMPARA_VAZIO                            ;SE O VETOR ESTIVER VAZIO, VAI AO FIM DO PROCEDIMENTO
    COMPARE_STRING:
        CMPSB
        JNZ DIFERENTE                           ;SE O ELEMENTO COMPARADO FOR DIFERENTE, SAIR DO LOOP E IMPRIMIR MENSAGEM
        LOOP COMPARE_STRING
    
    LEA DX, MSG_STRINGS_IGUAIS                  ;SE O LOOP RODAR INTEIRAMENTE E TODOS OS ELEMENTOS FOREM CORRETOS IMPRIMIR QUE SÃO IGUAIS
    INT 21H
    JMP COMPARA_VAZIO

    DIFERENTE:
    LEA DX, MSG_STRINGS_DIFERENTES
    INT 21H

    COMPARA_VAZIO:
    POP_4 AX, SI, CX, DI
    POP DX
    RET
COMPARAR_STRING ENDP

;IMPRIME MENSAGEM PEDINDO PARA QUE O USUÁRIO DIGITE UMA LETRA PARA ENCONTRAR NO VETOR
;IMPRIME QUANTAS VEZES A LETRA ESCOLHIDA APARECE NO VETOR
;NÚMERO DE CARACTERES A SEREM COMPARADOS DEVE ESTAR NA VARIÁVEL 'TAMANHO_VETOR'
;NÃO OPERA CORRETAMENTE CASO O CARACTERE DIGITADO PARA A BUSCA NÃO SEJA UMA LETRA
SEARCH_CARACTERE PROC
    PUSH_4 AX, SI, CX, DI

    XOR BX, BX                                  ;BX SERÁ O CONTADOR DE QUANTAS VEZES A LETRA ESCOLHIDA APARECE
    MOV CX, TAMANHO_VETOR
    CMP CX, 0
    JZ SEARCH_VAZIO                            ;SE O VETOR ESTIVER VAZIO, VAI AO FIM DO PROCEDIMENTO

    LEA SI, VETOR                               ;ENDEREÇO DO VETOR A SER ANALISADO
    CLD

    MOV AH, 9
    LEA DX, MSG_SEARCH                          ;PEDE CARACTERE PARA BUSCA
    INT 21H

    MOV AH, 1
    INT 21H

    CMP AL, 60H                                 ;CONFERE SE A LETRA É MAIÚSCULA OU MINÚSCULA
    JG LETRA_MINUSCULA                          
    MOV DH, AL                                  ;LETRA MAIÚSCULA GUARDADA EM DH
    MOV DL, AL                                  ;LETRA MINÚSCULA GUARDADA EM DL
    ADD DL, 20H
    JMP SEARCH_STRING

    LETRA_MINUSCULA:
    MOV DH, AL
    MOV DL, AL
    SUB DH, 20H    

    SEARCH_STRING:
        LODSB
        CMP AL, DH                              ;CONFERE SE A LETRA NO VETOR É IGUAL A LETRA SELECIONADA (MAIÚSCULA)
        JZ LETRA_ENCONTRADA
        
        CMP AL, DL                              ;CONFERE SE A LETRA NO VETOR É IGUAL A LETRA SELECIONADA (MINÚSCULA)
        JNZ LETRA_NAO_ENCONTRADA
        
        LETRA_ENCONTRADA:
        INC BX                                  ;SE A LETRA FOR IGUAL
        LETRA_NAO_ENCONTRADA:
        LOOP SEARCH_STRING

    MOV AH, 9
    LEA DX, MSG_SEARCH_COMPLETE
    INT 21H

    CMP BX, 9
    JLE IMPRIMIR_FACIL
    CALL SAIDADECIMAL                           ;IMPRIME O NÚMERO DE VEZES QUE A LETRA APARECE
    JMP SEARCH_VAZIO

    IMPRIMIR_FACIL:
    MOV AH, 2
    MOV DL, BL
    OR DL, 30H
    INT 21H

    SEARCH_VAZIO:
    POP_4 AX, SI, CX, DI
    RET
SEARCH_CARACTERE ENDP

;IMPRIME NÚMERO ARMAZENADO EM BX, NA FORMA DECIMAL
;PODE IMPRIMIR NÚMEROS DE 1 ATÉ 262143
SAIDADECIMAL PROC
    PUSH_4 AX, BX, CX, DX
    MOV AX, BX                                  ;PASSA O NUMERO A SER DIVIDIDO PARA AX
    MOV BX, 10                                  ;IMPRIMIR EM DECIMAL
    XOR CX, CX                                  ;CONTA QUANTOS DÍGITOS A SEREM IMPRESSOS
    XOR DX, DX                                  ;TIRA O LIXO DE DX
    OUTPUTDECIMAL:
        DIV BX                                  ;AX / BX    --> QUOCIENTE VAI PARA AX E RESTO VAI PARA DX
        PUSH DX
        XOR DX, DX
        INC CX
        OR AX, AX
        JNZ OUTPUTDECIMAL
    
    MOV AH, 2
    IMPRIMIRDECIMAL:
        POP DX
        OR DL, 30H
        INT 21H
        LOOP IMPRIMIRDECIMAL
    POP_4 AX, BX, CX, DX
    RET
SAIDADECIMAL ENDP
END MAIN